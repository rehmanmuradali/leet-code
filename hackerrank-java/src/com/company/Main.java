package com.company;


import java.math.BigInteger;
import java.sql.Array;
import java.util.*;

public class Main {


    public static List<Integer> findNumberSequence(String direction) {
        List<Integer> resultSequence = new ArrayList<>();
        for( int i = 0; i < direction.length(); i++)
        {
            if (direction.charAt(i) == 'R') {
                resultSequence.add(i+1);
            }
        }
        for( int i = direction.length() - 1; i >= 0 ; i--)
        {
            if (direction.charAt(i) == 'L') {
                resultSequence.add(i+1);
            }
        }

        return resultSequence;
    }



    public static int updateTimes(List<Integer> signalOne, List<Integer> signalTwo) {

        int oneCount = signalOne.size();
        int twoCount = signalTwo.size();
        int min = Math.min(oneCount, twoCount);
        int count = 0;
        int maxLevel = -1;


        for(int i=0; i<=min - 1; i++) {
            if (signalOne.get(i).compareTo(signalTwo.get(i)) == 0) {

                if(maxLevel < signalOne.get(i)) {
                    count++;
                    maxLevel = signalOne.get(i);
                }

            }
        }

        return count;
    }


    public static int maxIndex(int steps, int badIndex) {
        // Write your code here

        // 1  2  3  4  5  6
        // 1  3  6  10  15  21
        int max = steps * (steps + 1) / 2;
        int current = max;
        int remainingStep = steps;


        for (;;) {
            for(;current > 0 && steps > 0;) {
                current -= steps;
                if (current == badIndex) {
                    current += steps;
                }
                steps--;
            }

            if (current <= 0) {
                return max;
            } else {
                steps = remainingStep;
                current = max - 1;
                max--;

                if (current == badIndex) {
                    current = max - 1;
                    max--;
                }

            }
        }
    }



    public static void main(String[] args) {
	// write your code here

        int N = 10;
        int sum = 0;
        for (int i = 1; i <= N; i++)
        {
            sum += i;
        }
        System.out.println(sum);
        System.out.println(N* (N+1) /2 );


        List<Integer> l = Arrays.asList(16163, 2310, 4271, 23797, 15094, 32354, 24897, 38255, 6128, 5039, 8863, 38175, 40682, 36850, 40571, 15185, 18805, 9771, 13165, 47251, 6260, 1115, 37034, 30795, 25937, 36557, 45420, 20720, 37906, 26071, 41225, 17060, 41225, 22371, 12955, 9383, 27533, 34647, 35746, 35375, 37132, 13369, 7701, 6838, 16202, 21626, 47807, 7611, 25253, 15832, 1636, 31888, 10853, 15750, 10191, 20389, 20476, 40841, 2875, 10802, 4710, 28159, 9737, 35153, 9752, 15894, 7196, 21776, 12636, 30603, 45730, 33772, 9892, 25687, 14561, 19462, 41970, 18990, 35060, 39179, 19581, 45422, 3819, 14641, 28621, 35778, 36287, 45391, 22863, 41591, 13736, 45402, 23112, 36814, 45622, 489, 19239, 16329, 5065, 16622, 860, 34527, 41021, 46819, 19112, 20551, 15959, 30835, 42658, 38913, 40137, 20958, 4025, 27581, 18382, 569, 41129, 9712, 47137, 44321, 8915, 8109, 12094, 14947, 43319, 45274, 18315, 17317, 10203, 25335, 30932, 32139, 21009, 26120, 37118, 17898, 44023, 35642, 39571, 6301, 8958, 31215, 27330, 24350, 19898, 14833, 2423, 15968, 9631, 40869, 44775, 16318, 18332, 22425, 30032, 21588, 46214, 25813, 15004, 14998, 27790, 22879, 34905, 8786, 29532, 28859, 30146, 23971, 30936, 23090, 40293, 23658, 39176, 3394, 48121, 38545, 2532, 29400, 15478, 6942, 28941, 10541, 34556, 12280, 24821, 19302, 16916, 25893, 18174, 29371, 46117, 21369, 9961, 38032, 18623, 9523, 46190, 6289, 8856, 5715, 36493, 8274, 41209, 47312, 4502, 4934, 25569, 31454, 36817, 18684, 35778, 41455, 7881, 38752, 18938, 41020, 12583, 23944, 10717, 39789, 35144, 5976, 5729, 11239, 24812, 37679, 27535, 15195, 10517, 13247, 27314, 43931, 43163, 17989, 43929, 5897, 3325, 26638, 36402, 22779, 42203, 17099, 31422, 37955, 41658, 34596, 3413, 36122, 16377, 13393, 30134, 40309, 18956, 25764, 32552, 9810, 34489, 21592, 9635, 23406, 38879, 19319, 46954, 16848, 29660, 20741, 48168, 27705, 2231, 9204, 22572, 23557, 3957, 28716, 43690, 40255, 19479, 35609, 14573, 29158, 28063, 32844, 27414, 41143, 39902, 26570, 9064, 14012, 11119, 32528, 26241, 13851, 13876, 35780, 33546, 46469, 4937, 24861, 34917, 8474, 23257, 9622, 510, 36395, 22334, 19150, 39717, 18998, 21199, 25157, 33199, 43710, 12390, 32764, 47534, 30669, 220, 10668, 43888, 23084, 16329, 32804, 37898, 22909, 11343, 11890, 17749, 34495, 5771, 43076, 10302, 16758, 3388, 39808, 39741, 19290, 34001, 16708, 20082, 25145, 46332, 4755, 36612, 1530, 32038, 9491, 11073, 19222, 9503, 10865, 43749, 32747, 1574, 35784, 42318, 36141, 11148, 34667, 22136, 35833, 9373, 20679, 13027, 31667, 6095, 14491, 10858, 7260, 31149, 31442, 41431, 15715, 46531, 29956, 4593, 29286, 44907, 12293, 43341, 1400, 43902, 20180, 25916, 41503, 9043, 6729, 30237, 38607, 8577, 6683, 357, 13018, 3801, 18605, 36849, 32621, 7996, 2573, 25420, 3325, 1420, 34901, 8446, 31558, 18762, 15611, 34569, 551, 4878, 16907, 38751, 27619, 5926, 30776, 5771, 20533, 44818, 18564, 1960, 28755, 40747, 15777, 31217, 39781, 21957, 20202, 13745, 4146, 37557, 5079, 13975, 27302, 25633, 584, 12088, 47367, 13510, 38819, 31919, 12498, 23273, 5439, 14223, 45022, 39149, 36472, 42185, 41386, 12725, 31340, 44607, 44452, 30929, 37134, 39342, 31191, 42062, 41482, 3437, 1352, 34588, 36563, 44572, 31070, 47758, 5076, 175, 28062, 9453, 22792, 43659, 722, 8336, 9846, 37728, 41870, 29616, 47395, 3707, 27372, 215, 23720, 33045, 6938, 33465, 35942, 13534, 20057, 45930, 10724, 6618, 33337, 13225, 24449, 22172, 20198, 45483, 1444, 42785, 45861, 43053, 15531, 21587, 45988, 45192, 21888, 23297, 9844, 41940, 19660, 26662, 2645, 42276, 39498, 22751, 13910, 5259, 33633, 43050, 8458, 40826, 108, 33086, 7280, 42816, 11832, 31440, 42038, 18686, 41764, 27123, 21052, 10400, 43637, 34575, 13332, 11051, 12333, 23733, 15595, 39211, 39966, 14281, 13541, 43137, 3476, 23576, 13527, 26416, 40601, 26121, 25646, 44909, 32494, 36361, 24563, 46727, 32533, 11878, 40301, 38611, 26233, 44303, 9007, 15303, 26813, 7435, 28754, 28002, 10858, 1349, 41665, 3477, 36776, 21965, 13489, 1464, 35039, 28437, 24665, 47453, 1052, 21839, 3852, 36263, 45995, 6098, 9257, 1737, 46848, 27780, 13095, 17843, 47097, 11388, 13787, 1189, 44405, 6048, 45488, 5384, 3858, 47837, 33752, 19823, 37747, 23476, 2850, 4903, 45525, 5583, 29420, 37102, 41333, 31520, 6134, 11166, 16363, 24088, 28520, 3899, 35103, 16203, 37446, 26535, 16366, 33891, 8103, 26359, 31404, 507, 5076, 19743, 38632, 33622, 8691, 32686, 2301, 29140, 35225, 42543, 27528, 121, 23421, 45140, 2058, 34969, 29356, 5955, 42962, 41066, 42470, 6651, 6240, 32640, 14610, 38113, 34018, 3537, 13974, 17277, 20702, 28853, 10592, 27150, 48353, 46231, 28889, 2763, 6215, 21985, 41671, 23740, 16437, 4895, 29721, 34576, 2052, 38902, 13524, 33910, 9866, 5537, 6086, 8070, 18533, 23271, 10206, 26995, 39998, 33602, 1300, 19553, 9043, 33057, 26431, 24655, 29089, 15369, 43240, 27499, 1364, 3112, 6960, 3306, 15568, 37732, 27719, 17313, 43309, 40383, 8939, 34281, 36003, 4760, 31802, 7486, 18228, 46361, 23811, 29911, 12472, 32389, 41355, 24056, 29337, 47031, 27259, 29667, 34722, 29900, 31511, 36713, 24590, 661, 12300, 30386, 30536, 36596, 39884, 7727, 16542, 2401, 15592, 27675, 14865, 29405, 30131, 22787, 30211, 20227, 13475, 25123, 32552, 17185, 35411, 47959, 40886, 8332, 13414, 22903, 38349, 35751, 15205, 34472, 30273, 42353, 47414, 9481, 18664, 9671, 36405, 36939, 10205, 35821, 28919, 40809, 40371, 41694, 42201, 22754, 20921, 17473, 29488, 18017, 21272, 3347, 38181, 33684, 25972, 19006, 38461, 601, 41, 31512, 31997, 13225, 26369, 43068, 28992, 10601, 44752, 3353, 46187, 33561, 427, 10784, 592, 43388, 19416, 7128, 1769, 17205, 16186, 37237, 20392, 41721, 22810, 2645, 10719, 2779, 1479, 35906, 6103, 38862, 43855, 33391, 25209, 25729, 28374, 44442, 25496, 8900, 11977, 33822, 37223, 7910, 38646, 5716, 5661, 42806, 24892, 35454, 43484, 13604, 36968, 32364, 39581, 24190, 14298, 33740, 22470, 27702, 42647, 10144, 13337, 30245, 15756, 3758, 36747, 26343, 25414, 29605, 8547, 24888, 36163, 30762, 3317, 5592, 14375, 40121, 33397, 45307, 29632, 48224, 46392, 34373, 47254, 45826, 27036, 7326, 19105, 47691, 28454, 21522, 27631, 38687, 25981, 15172, 24796, 34603, 23741, 15798, 7037, 41400, 4902, 34004, 6743, 35992, 14398, 24658, 12783, 13749, 33051, 29290, 40932, 41152, 15038, 664, 11194, 19392, 40206, 38341, 38029, 11267, 47035, 25318, 25427, 42532, 3332, 39908, 25321, 9020, 27209, 3876, 2147, 21391, 17785, 33998, 33854, 25790, 36185, 42017, 4626, 46343, 20305, 27864, 4435, 18732, 35696, 16733, 10933, 2883, 11459, 24709, 41191, 2402, 9936, 22162, 16156, 39693, 34966, 26689, 42528, 3170, 12967, 32788, 32956, 919, 8918, 27342, 33583, 36696, 4780, 3431, 33884, 4076, 1640, 29316, 11492, 38093, 1964, 35208, 36693, 35672, 3246, 38255, 20624, 26448, 12847, 6014, 11930, 41874, 4120, 44424, 21734, 20597, 16021, 18464, 32529, 12941, 38355, 15770, 5116, 12113, 10504, 19875, 29080, 9248, 7960, 35390, 33094, 22225);
        List<Integer> l2 = Arrays.asList(16163, 31773, 4271, 23797, 6437, 32354, 24897, 44192, 40106, 29657, 8863, 40993, 16030, 36850, 28702, 8319, 18805, 39555, 13165, 47251, 22337, 1115, 37034, 30795, 39605, 46573, 45420, 26394, 27157, 26207, 41225, 6048, 28590, 22371, 33407, 9383, 27533, 34647, 35746, 35375, 37132, 13369, 7701, 6838, 5867, 21626, 23567, 3092, 15037, 21312, 19052, 20310, 37332, 15750, 38610, 27402, 20476, 27885, 2875, 5144, 4356, 28631, 42296, 35153, 9752, 15894, 12807, 13410, 45676, 8991, 45730, 46110, 46518, 25687, 1482, 19462, 8176, 18990, 35060, 44897, 45353, 45422, 3819, 35170, 28621, 35778, 36287, 45391, 22863, 41591, 3823, 17796, 46902, 15433, 6916, 489, 19239, 3236, 18917, 12802, 24977, 34527, 41021, 3151, 19112, 13851, 44849, 11373, 42658, 42337, 40137, 20958, 4025, 27581, 11896, 569, 41129, 5616, 31639, 924, 46091, 8109, 12094, 14947, 43319, 26128, 24088, 32153, 4433, 25335, 2469, 32139, 21009, 26120, 37118, 30892, 24930, 35536, 39571, 38696, 8958, 31215, 27330, 24350, 3514, 21146, 2423, 15968, 39921, 18641, 9226, 16318, 37975, 22425, 30032, 32661, 24251, 10558, 15004, 6097, 27790, 22879, 1424, 8786, 29532, 28859, 30146, 23971, 22744, 23090, 658, 2572, 39176, 3394, 48121, 13490, 2532, 29400, 15478, 31273, 21110, 10541, 36903, 21421, 12290, 43028, 4810, 11642, 30933, 36400, 13543, 21369, 26696, 12637, 18623, 2221, 46190, 32330, 3818, 21116, 36493, 8274, 41209, 41018, 32020, 4934, 25569, 1018, 36817, 10126, 27525, 31074, 47669, 38752, 18938, 251, 12583, 43190, 38, 19886, 35144, 9101, 33785, 11239, 24812, 2692, 9384, 10650, 18832, 47668, 27314, 43931, 43163, 44365, 43929, 5897, 3325, 25728, 24736, 8599, 42203, 8871, 31422, 20772, 20458, 30417, 15363, 36122, 21521, 17476, 35565, 46249, 12646, 25764, 32552, 9810, 35202, 20465, 9635, 15103, 38879, 19319, 46954, 32095, 29660, 38660, 48168, 10345, 2231, 25122, 22572, 20775, 23027, 2396, 19199, 40255, 19479, 35609, 14573, 44441, 33473, 32844, 27414, 41143, 39902, 18052, 3284, 14012, 11119, 5808, 26241, 13851, 9912, 21483, 20540, 46469, 3400, 24861, 34917, 8474, 11749, 9622, 510, 36395, 22334, 19150, 39717, 18998, 21199, 36898, 33199, 43818, 12390, 29553, 47534, 30669, 33318, 4424, 22007, 30771, 16329, 41419, 23870, 22909, 11180, 11890, 16456, 40070, 10052, 7038, 10302, 43330, 34137, 39808, 39741, 19290, 34001, 16708, 21855, 25145, 46332, 31535, 36612, 38484, 32038, 9491, 11073, 19222, 47872, 10865, 43749, 32747, 1574, 35784, 6780, 36141, 17138, 34667, 46790, 35833, 9373, 20679, 5415, 31667, 41826, 14491, 18523, 7260, 2927, 31442, 2863, 15715, 42622, 29956, 4593, 29286, 27395, 37294, 30186, 1400, 8043, 20180, 29520, 30853, 36114, 37045, 30237, 3022, 5634, 6683, 357, 9530, 3801, 3920, 12718, 32621, 28107, 2573, 37414, 3325, 13476, 34901, 15528, 31558, 18762, 15611, 34569, 33842, 4878, 17892, 38751, 5663, 5926, 33230, 25085, 20533, 24531, 18564, 4051, 28755, 40747, 32930, 31217, 39781, 24193, 40414, 13745, 4146, 3189, 5079, 13975, 4267, 25633, 1623, 12088, 47367, 13510, 38819, 31919, 25007, 23273, 5439, 14223, 4069, 39149, 1293, 14423, 41386, 26425, 31340, 44607, 44452);
        System.out.println(updateTimes(l, l2));
    }
}
